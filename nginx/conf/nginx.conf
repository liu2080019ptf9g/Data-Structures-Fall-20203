user  www;
worker_processes  2;

error_log  logs/error.log  info;

#pid        logs/nginx.pid;
worker_rlimit_nofile  65535;

events {
    worker_connections  65535;
}

http {
    lua_package_path '/usr/local/openresty/lualib/?.lua;;';
    lua_package_cpath '/usr/local/openresty/lualib/?.so;;';
    
    lua_shared_dict limit_config_list 10m;
    
    lua_shared_dict sqps_limit_locks 10m;
    lua_shared_dict sqps_limit_counter 10m;    
    
    lua_shared_dict aqps_limit_locks 1m;
    lua_shared_dict aqps_limit_counter 1m;
    
    #lua_shared_dict ip_black_list 10m;
    #lua_shared_dict url_white_list 10m;
    
    lua_shared_dict degrade_url_mapping 10m;
    
    lua_shared_dict split_config_dict_data 10m;
    
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent $request_body "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;
    
    underscores_in_headers on;
    
    #init_by_lua_file /usr/local/openresty/lua_scripts/init_limit_policy.lua;   
    init_by_lua '
        limit_interceptor = require "ddtk.limit_interceptor"
        limit_interceptor.load_policy()
    ';
    
    upstream backend_1 {
        server   10.255.209.69:80 weight=1 max_fails=2 fail_timeout=30s;
    }
    
    upstream backend_2 {
        server   10.255.209.70:80 weight=1 max_fails=2 fail_timeout=30s;
    }
    
    server {
        listen       80;
        server_name  localhost;

        charset utf-8;
				
        location ~ \.(gif|jpg|png|js|css)$ {
            root html;
        }

        location = /deny {
            default_type text/plain;
            content_by_lua_file /usr/local/openresty/lua_scripts/deny.lua;
        }
        
        location = /update_shared_memory {
            default_type text/plain;
            content_by_lua_file /usr/local/openresty/lua_scripts/update_shared_memory.lua;
        }
        
        location = /query_shared_memory {
            default_type text/plain;
            content_by_lua_file /usr/local/openresty/lua_scripts/query_shared_memory.lua;
        }
        
        location = /generate_test_data {
            default_type text/plain;
            content_by_lua_file /usr/local/openresty/lua_scripts/generate_test_data.lua;
        }
        
        location = /query_limit_policy {
            default_type text/plain;
            content_by_lua_file /usr/local/openresty/lua_scripts/query_limit_policy.lua;
        }
        
        location = /update_limit_policy {
            default_type text/plain;
            content_by_lua_file /usr/local/openresty/lua_scripts/update_limit_policy.lua;
        }
        
        location / {
            set $backend_name "backend_1";
            proxy_next_upstream http_502 http_504 error timeout invalid_header;
            proxy_set_header Host  $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_pass http://$backend_name;
            #expires  1h;
            
            #access_by_lua_file /usr/local/openresty/lua_scripts/dlimit.lua;
            #header_filter_by_lua_file /usr/local/openresty/lua_scripts/retvalue.lua;
            access_by_lua '
                limit_interceptor.flowlimit_entrance()
            ';
            header_filter_by_lua '
                limit_interceptor.set_response()
            ';
            
        }        
        
        #error_page  404              /404.html;
        
        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

    }

}